package rs.ac.bg.fon.nprog.client.gui;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;

import javax.json.stream.JsonParser;

import org.json.simple.parser.JSONParser;

import rs.ac.bg.fon.nprog.client.komunikacija.KomunikacijaSaServerom;
import rs.ac.bg.fon.nprog.library.domen.Korisnik;
import rs.ac.bg.fon.nprog.library.konstante.Operacije;
import rs.ac.bg.fon.nprog.library.transfer.KlijentskiZahtev;
import rs.ac.bg.fon.nprog.library.transfer.ServerskiOdgovor;

/**
 *
 * @author Nadia
 */
public class FrmMain extends javax.swing.JFrame {
	Korisnik ulogovan;

	/**
	 * Creates new form FrmMain
	 */
	public FrmMain(Korisnik ulogovan) {
		initComponents();
		this.ulogovan = ulogovan;
		sredi();

		this.addWindowListener(new WindowAdapter() {

			public void windowClosing(WindowEvent e) {
				handleClose();
				System.exit(0);

			}

		});

		this.setVisible(true);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jTextField1 = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		txtDobrodoslica = new javax.swing.JLabel();
		menuRecept = new javax.swing.JMenuBar();
		jmiDodajRecept = new javax.swing.JMenu();
		jmiPrikaz = new javax.swing.JMenuItem();
		jmiDodaj = new javax.swing.JMenuItem();
		jMenu2 = new javax.swing.JMenu();
		jmFilter = new javax.swing.JMenu();
		jmiFilterVrstiJela = new javax.swing.JMenuItem();
		jmiFilterVremePripreme = new javax.swing.JMenuItem();
		jmiFilterNaziva = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setBackground(new java.awt.Color(255, 204, 102));

		jTextField1.setText("jTextField1");

		jLabel1.setIcon(
				new javax.swing.ImageIcon(getClass().getResource("/rs/ac/bg/fon/nprog/library/img/cooking.png"))); // NOI18N

		txtDobrodoslica.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

		jmiDodajRecept.setText("Recept");

		jmiPrikaz.setText("Prikaži");
		jmiPrikaz.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jmiPrikazActionPerformed(evt);
			}
		});
		jmiDodajRecept.add(jmiPrikaz);

		jmiDodaj.setText("Dodaj");
		jmiDodaj.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jmiDodajActionPerformed(evt);
			}
		});
		jmiDodajRecept.add(jmiDodaj);

		menuRecept.add(jmiDodajRecept);

		jMenu2.setText("Filter");

		jmFilter.setText("Filtriraj prema");

		jmiFilterVrstiJela.setText("vrsti jela");
		jmiFilterVrstiJela.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jmiFilterVrstiJelaActionPerformed(evt);
			}
		});
		jmFilter.add(jmiFilterVrstiJela);

		jmiFilterVremePripreme.setText("vremenu pripreme");
		jmiFilterVremePripreme.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jmiFilterVremePripremeActionPerformed(evt);
			}
		});
		jmFilter.add(jmiFilterVremePripreme);

		jmiFilterNaziva.setText("nazivu");
		jmiFilterNaziva.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jmiFilterNazivaActionPerformed(evt);
			}
		});
		jmFilter.add(jmiFilterNaziva);

		jMenu2.add(jmFilter);

		menuRecept.add(jMenu2);

		setJMenuBar(menuRecept);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(txtDobrodoslica,
								javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup().addGap(88, 88, 88).addComponent(jLabel1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))))
				.addContainerGap(42, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(txtDobrodoslica, javax.swing.GroupLayout.PREFERRED_SIZE, 33,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 479,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addContainerGap(23, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>

	private void jmiFilterVremePripremeActionPerformed(java.awt.event.ActionEvent evt) {
		new FrmFilterVremePripreme(this, true).setVisible(true);
	}

	private void jmiPrikazActionPerformed(java.awt.event.ActionEvent evt) {
		new FrmPrikaz(this, true, ulogovan).setVisible(true);
	}

	private void jmiDodajActionPerformed(java.awt.event.ActionEvent evt) {
		new FrmDodaj(ulogovan).setVisible(true);
	}

	private void jmiFilterVrstiJelaActionPerformed(java.awt.event.ActionEvent evt) {
		new FrmFilterVrsteJela(this, true).setVisible(true);
	}

	private void jmiFilterNazivaActionPerformed(java.awt.event.ActionEvent evt) {
		new FrmFilterNaziv(this, true).setVisible(true);
	}

	/**
	 * @param args the command line arguments
	 */

	// Variables declaration - do not modify
	private javax.swing.JLabel jLabel1;
	private javax.swing.JMenu jMenu2;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JMenu jmFilter;
	private javax.swing.JMenuItem jmiDodaj;
	private javax.swing.JMenu jmiDodajRecept;
	private javax.swing.JMenuItem jmiFilterNaziva;
	private javax.swing.JMenuItem jmiFilterVremePripreme;
	private javax.swing.JMenuItem jmiFilterVrstiJela;
	private javax.swing.JMenuItem jmiPrikaz;
	private javax.swing.JMenuBar menuRecept;
	private javax.swing.JLabel txtDobrodoslica;
	// End of variables declaration

	public void handleClose() {
		KlijentskiZahtev kz = new KlijentskiZahtev();
		kz.setOperacija(Operacije.IZBACI_KLIJENTA);
		KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
		ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().primiOdgovor();
	}

	private void sredi() {
		this.setLocationRelativeTo(null);
		this.setTitle("Cookbook");
		txtDobrodoslica.setText("Zdravo " + ulogovan.getIme() + ", nemoj da zaboraviš da dodaš novi recept danas!");
		//dodajVreme();
	}

/*	private void dodajVreme() throws IOException {
		String URL = "http://worldtimeapi.org/api/timezone/Europe/Belgrade";

	    // Connect to the URL using java's native library
	    URL url = new URL(URL);
	    URLConnection request = url.openConnection();
	    request.connect();

	    // Convert to a JSON object to print data
	    JSONParser jp = new JSONParser(); //from gson
	    JsonElement root = jp.parse(new InputStreamReader((InputStream) request.getContent())); //Convert the input stream to a json element
	    JsonObject rootobj = root.getAsJsonObject(); //May be an array, may be an object. 
	    String zipcode = rootobj.get("zip_code").getAsString();
	}
*/
}
